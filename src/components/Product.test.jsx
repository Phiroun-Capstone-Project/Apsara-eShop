// Generated by CodiumAI

describe('Product', () => {

    // Renders the product details when the API call is successful and loading state is false
    it('should render the product details when the API call is successful and loading state is false', () => {
      // Mock the fetch function
      global.fetch = jest.fn(() =>
        Promise.resolve({
          json: () => Promise.resolve({
            id: 1,
            image: "https://example.com/image.jpg",
            title: "Product Title",
            category: "Product Category",
            rating: {
              rate: 4.5
            },
            price: 9.99,
            description: "Product Description"
          })
        })
      );

      // Render the Product component
      const wrapper = shallow(<Product />);

      // Assert that the Loading component is not rendered
      expect(wrapper.find(Loading)).toHaveLength(0);

      // Assert that the ShowProduct component is rendered
      expect(wrapper.find(ShowProduct)).toHaveLength(1);

      // Assert that the product details are rendered correctly
      expect(wrapper.find("img").prop("src")).toEqual("https://example.com/image.jpg");
      expect(wrapper.find("img").prop("alt")).toEqual("Product Title");
      expect(wrapper.find(".text-black-50").text()).toEqual("Product Category");
      expect(wrapper.find("h1").text()).toEqual("Product Title");
      expect(wrapper.find(".fw-bolder").text()).toEqual("Rating 4.5");
      expect(wrapper.find(".display-6").text()).toEqual("Price: $9.99");
      expect(wrapper.find(".lead").text()).toEqual("Product Description");
    });


});
